let pokemonRepository = (function () {
  let t = [],
    e = $('.pokemon-list');
  function n(e) {
    t.push(e);
  }
  function o() {
    return t;
  }
  function a(t) {
    return fetch(t.detailsUrl)
      .then(function (t) {
        return t.json();
      })
      .then(function (e) {
        (t.imageUrl = e.sprites.front_default),
          (t.imageUrlBack = e.sprites.back_default),
          (t.weight = e.weight / 10),
          (t.height = e.height / 10),
          (t.types = []);
        for (let n = 0; n < e.types.length; n++)
          t.types.push(e.types[n].type.name);
      })
      .catch(function (t) {
        console.error(t);
      });
  }
  return {
    add: n,
    getAll: o,
    addListItem: function t(n) {
      let o = $('<li></li>');
      o.addClass('group-list-item');
      let i = $(
        '<button type="button" class="button-class btn btn-primary" data-target="#pokemon-modal" data-toggle="modal"><div class="pokeball-container"> <img src="img/pokeball.svg" class="pokeball-img" /> </div>' +
          n.name +
          '<div class="pokeball-container"> <img src="img/pokeball.svg" class="pokeball-img" /> </div></button>'
      );
      o.append(i),
        e.append(o),
        i.on('click', function () {
          (function t(e) {
            a(e).then(function () {
              var t;
              let n, o, a, i, l, p, s, r, c;
              (t = e),
                (n = $('.modal-body')),
                (o = $('.modal-title')),
                (a = $('.modal-type')),
                o.empty(),
                n.empty(),
                a.empty(),
                (i = $('<b>' + t.name + '</b>')),
                (l = $('<img class="modal-img">')),
                l.attr('src', t.imageUrl),
                (p = $('<img class="modal-img">')),
                p.attr('src', t.imageUrlBack),
                (s = $('<p>Height: ' + t.height + 'm</p>')),
                (r = $('<p>Weight: ' + t.weight + 'kg</p>')),
                (c = $('<b>' + t.types + ' type Pokemon</b>')),
                o.append(i),
                a.append(c),
                n.append(l),
                n.append(p),
                n.append(s),
                n.append(r);
            });
          })(n);
        });
    },
    loadList: function t() {
      return fetch('https://pokeapi.co/api/v2/pokemon/?limit=150')
        .then(function (t) {
          return t.json();
        })
        .then(function (t) {
          t.results.forEach(function (t) {
            n({ name: t.name, detailsUrl: t.url });
          });
        })
        .catch(function (t) {
          console.error(t);
        });
    },
    loadDetails: a,
  };
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
